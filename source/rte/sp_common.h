
/*
 * Filename: sp_common.h
 *
 * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
 */

#ifndef _H_DEFINE_SP_COMMON
#define _H_DEFINE_SP_COMMON

#include "project.h"
#include "global.h"
#include "rte_types.h"

/* USER CODE START SP_COMMON_INCLUDES */

/* USER CODE END SP_COMMON_INCLUDES */



#include "sc_joystick.h"
#include "sc_button.h"
#include "sc_event.h"
#include "sc_menue.h"
#include "sc_pong.h"
#include "sc_hmi.h"



/*
* description: A Signal, responsible for Joystick driver behaviour.
* indriver: default
* name: so_joystick
* onDataError: 0
* onDataUpdate: 0
* outdriver: 0
* resource: None
* shortname: joystick
* signalclass: sc_joystick
* signalpool: sp_common
*/
extern SC_JOYSTICK_t SO_JOYSTICK_signal;


/*
* description: A Signal, responsible for button driver.
* indriver: default
* name: so_buttons
* onDataError: 0
* onDataUpdate: 0
* outdriver: 0
* resource: None
* shortname: buttons
* signalclass: sc_button
* signalpool: sp_common
*/
extern SC_BUTTON_t SO_BUTTONS_signal;


/*
* description: A Signal, responsible for triggering the statemachine.
* indriver: 0
* name: so_event
* onDataError: 0
* onDataUpdate: ev_event_onData
* outdriver: 0
* resource: res_event_Lock
* shortname: event
* signalclass: sc_event
* signalpool: sp_common
*/
extern SC_EVENT_t SO_EVENT_signal;


/*
* description: A Signal, containing menue struct. HMI reads out values and positions to print on the hmi
* indriver: 0
* name: so_menue
* onDataError: 0
* onDataUpdate: 0
* outdriver: 0
* resource: None
* shortname: menue
* signalclass: sc_menue
* signalpool: sp_common
*/
extern SC_MENUE_t SO_MENUE_signal;


/*
* description: A Signal
* indriver: 0
* name: so_game
* onDataError: 0
* onDataUpdate: 0
* outdriver: 0
* resource: None
* shortname: game
* signalclass: sc_pong
* signalpool: sp_common
*/
extern SC_PONG_t SO_GAME_signal;


/*
* description: A Signal
* indriver: 0
* name: so_tft
* onDataError: 0
* onDataUpdate: 0
* outdriver: default
* resource: None
* shortname: tft
* signalclass: sc_hmi
* signalpool: sp_common
*/
extern SC_HMI_t SO_TFT_signal;



/*
 * Increments the age of the signals in this pool 
 */
void RTE_timertick_sp_common_tick(uint32_t tick);

#endif